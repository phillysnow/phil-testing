stages:
  - build
  - deploy

build:acc:
  stage: build
  image: 'registry.tfe.nl/frontend/docker-frontend:latest'
  script:
      - yarn
      - yarn build
  cache:
    key:
      files:
        - package.json
        - yarn.lock
    paths:
      - node_modules
  tags:
      - docker-unrestricted
  only:
    refs:
      - staging

build:prd:
  stage: build
  image: 'registry.tfe.nl/frontend/docker-frontend:latest'
  script:
      - yarn
      - yarn generate
  cache:
    key:
      files:
        - package.json
        - yarn.lock
    paths:
      - node_modules
  tags:
      - docker-unrestricted
  only:
    refs:
      - master

deploy:acc:
  stage: deploy
  environment:
      name: acc
  when: manual
  image: registry.tfe.nl/continuous-integration/aws:latest
  needs:
    - job: build:acc
      artifacts: true
  tags:
      - docker-unrestricted
  only:
      refs:
          - staging
  script:
      - cd dist && aws s3 sync --delete . s3://$AWS_S3_BUCKET

deploy:prd:
  stage: deploy
  environment:
    name: prd
  when: manual
  image: registry.tfe.nl/continuous-integration/aws:latest
  needs:
    - job: build:prd
      artifacts: true
  tags:
      - docker-unrestricted
  only:
      refs:
          - master
  script:
      - cd dist && aws s3 sync --delete . s3://$AWS_S3_BUCKET
